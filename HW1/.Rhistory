knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat.explore)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)   # for KDE and ML risk class intervals
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
policeDistricts <-
st_read("https://data.cityofchicago.org/api/geospatial/fthy-xz3r?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271') %>%
dplyr::select(District = dist_num)
drugArrest <-
read.socrata("https://data.cityofchicago.org/Public-Safety/Crimes-2017/d62x-nvdr") %>%
filter(Primary.Type == "NARCOTICS") %>%
mutate(x = gsub("[()]", "", Location)) %>%
separate(x,into= c("Y","X"), sep=",") %>%
mutate(X = as.numeric(X),Y = as.numeric(Y)) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271') %>%
distinct()
chicagoBoundary <-
st_read("https://data.cityofchicago.org/api/geospatial/ewy2-6yfk?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271')
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = drugArrest, colour="blue", size=0.1, show.legend = "point") +
labs(title= "Narcotic Arrests, Chicago 2017") +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = chicagoBoundary, fill = "grey70") +
stat_density2d(data = data.frame(st_coordinates(drugArrest)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_viridis() +
scale_alpha(range = c(0.00, 0.35), guide = FALSE) +
labs(title = "Density of Narcotic Arrests") +
mapTheme(title_size = 14) + theme(legend.position = "none"))
## using {sf} to create the grid
## Note the `.[chicagoBoundary] %>% ` line. This is needed to clip the grid to our data
fishnet <-
st_make_grid(chicagoBoundary,
cellsize = 500,
square = TRUE) %>%
.[chicagoBoundary] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
crime_net <-
dplyr::select(drugArrest) %>%
mutate(countNarco = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(countNarco = replace_na(countNarco, 0),
uniqueID = 1:n(),
cvID = sample(round(nrow(fishnet) / 24),
size=nrow(fishnet), replace = TRUE))
ggplot() +
geom_sf(data = crime_net, aes(fill = countNarco), color = NA) +
scale_fill_viridis() +
labs(title = "Count of Nacro Arrests for the fishnet") +
mapTheme()
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countNarco")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## only pulling a single variable for our model to keep it simple
## using Socrata again
registeredMurals <-
read.socrata("https://data.cityofchicago.org/Historic-Preservation/Mural-Registry/we8h-apcf") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Registered_Murals") %>%
mutate(uniqueID = 1:n(),) %>%
filter(uniqueID != 439, 440) %>%
#filter(uniqueID != 440) %>%
filter(uniqueID != 441) %>%
filter(uniqueID != 442) %>%
filter(uniqueID != 443) %>%
group_by(Legend)
## only pulling a single variable for our model to keep it simple
## using Socrata again
registeredMurals <-
read.socrata("https://data.cityofchicago.org/Historic-Preservation/Mural-Registry/we8h-apcf") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Registered_Murals") %>%
mutate(uniqueID = 1:n(),) %>%
filter(uniqueID != 439, 440) %>%
#filter(uniqueID != 440) %>%
filter(uniqueID != 441) %>%
filter(uniqueID != 442) %>%
filter(uniqueID != 443) %>%
group_by(Legend)
## only pulling a single variable for our model to keep it simple
## using Socrata again
registeredMurals <-
read.socrata("https://data.cityofchicago.org/Historic-Preservation/Mural-Registry/we8h-apcf") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Registered_Murals") %>%
mutate(uniqueID = 1:n(),) %>%
filter(uniqueID != 439) %>%
filter(uniqueID != 440) %>%
filter(uniqueID != 441) %>%
filter(uniqueID != 442) %>%
filter(uniqueID != 443) %>%
group_by(Legend)
registeredMurals <- registeredMurals %>%
dplyr::select(geometry, Legend)
## Neighborhoods to use in LOOCV in a bit
neighborhoods <-
st_read("https://raw.githubusercontent.com/blackmad/neighborhoods/master/chicago.geojson") %>%
st_transform(st_crs(fishnet))
