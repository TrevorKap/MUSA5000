reg.ss.spatialCV %>%
mutate(
countNarco.Error = Prediction - countNarco,
countNarco.AbsError = abs(Prediction - countNarco),
countNarco.APE = (abs(Prediction - countNarco)) / countNarco)
ggplot(reg.ss.spatialCV)+
geom_sf(aes(fill = countNarco.Error))+
scale_fill_gradient(low = "black", high = "yellow", name = "Error of Predicted Narcotic Arrests")+
mapTheme()
ggplot(reg.ss.spatialCV)+
geom_sf(aes(fill = countNarco.AbsError))+
scale_fill_gradient(low = "black", high = "red", name = "Absolute Error of Predicted Narcotic Arrests")+
mapTheme()
ggplot(reg.ss.spatialCV)+
geom_sf(aes(fill = countNarco.APE))+
scale_fill_gradient(low = "black", high = "blue", name = "Absolute Percentage Error of Predicted Narcotic Arrests")+
mapTheme()
reg.ss.spatialCV_nogeom <- reg.ss.spatialCV %>%
st_drop_geometry() %>%
summarise(MAE = mean(countNarco.AbsError),
MAESTD = std(countNarco.APE)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Error Standard Deviation')) %>%
kable_classic()
reg.ss.spatialCV_nogeom <- reg.ss.spatialCV %>%
st_drop_geometry() %>%
summarise(MAE = mean(countNarco.AbsError),
MAESTD = sd(countNarco.APE)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Error Standard Deviation')) %>%
kable_classic()
reg.ss.spatialCV_nogeom <- reg.ss.spatialCV %>%
st_drop_geometry() %>%
summarise(MAE = mean(countNarco.AbsError),
MAESTD = sd(countNarco.APE)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Error Standard Deviation')) %>%
kable_classic()
reg.ss.spatialCV_nogeom <- reg.ss.spatialCV %>%
st_drop_geometry() %>%
summarise(MAE = mean(countNarco.AbsError),
MAESTD = sd(countNarco.APE)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Error Standard Deviation')) %>%
kable_classic()
reg.ss.spatialCV_nogeom
reg.ss.spatialCV_nogeom <- reg.ss.spatialCV %>%
st_drop_geometry() %>%
summarise(MAE = mean(countNarco.AbsError),
MAESTD = sd(countNarco.AbsError)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Error Standard Deviation')) %>%
kable_classic()
reg.ss.spatialCV_nogeom
rbind(narc_KDE_sf, narc_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(narcs18, 3000), size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 narcotic risk predictions; 2018 narcotic arrests") +
mapTheme(title_size = 14)
rbind(narc_KDE_sf, narc_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countNarco = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countNarco / sum(countNarco)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2018 narco",
y = "% of Test Set Burglaries (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(narc_KDE_sf, narc_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countNarco = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countNarco / sum(countNarco)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2018 narco",
y = "% of Test Set Narcotic Arrests (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
## see ?localmoran
local_morans <- localmoran(final_net$Registered_Murals, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(Registered_Murals_Count = Registered_Murals,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
## define the variables we want
reg.ss.vars <- c("Registered_Murals.nn", "Mural.isSig.dist")
## RUN REGRESSIONS
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countNarco",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = name, countNarco, Prediction, geometry)
## define the variables we want
reg.ss.vars <- c("Registered_Murals.nn", "Mural.isSig.dist")
## RUN REGRESSIONS
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countNarco",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = name, countNarco, Prediction, geometry)
View(drugArrest)
policeDistricts <-
st_read("https://data.cityofchicago.org/api/geospatial/fthy-xz3r?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271') %>%
dplyr::select(District = dist_num)
drugArrest <-
read.socrata("https://data.cityofchicago.org/Public-Safety/Crimes-2017/d62x-nvdr") %>%
filter(Primary.Type == "NARCOTICS" & Description == "POSS: CANNABIS 30GMS OR LESS" | Description == "POSS: CANNABIS MORE THAN 30GMS") %>%
mutate(x = gsub("[()]", "", Location)) %>%
separate(x,into= c("Y","X"), sep=",") %>%
mutate(X = as.numeric(X),Y = as.numeric(Y)) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271') %>%
distinct()
chicagoBoundary <-
st_read("https://data.cityofchicago.org/api/geospatial/ewy2-6yfk?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271')
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat.explore)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)   # for KDE and ML risk class intervals
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
policeDistricts <-
st_read("https://data.cityofchicago.org/api/geospatial/fthy-xz3r?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271') %>%
dplyr::select(District = dist_num)
drugArrest <-
read.socrata("https://data.cityofchicago.org/Public-Safety/Crimes-2017/d62x-nvdr") %>%
filter(Primary.Type == "NARCOTICS" & Description == "POSS: CANNABIS 30GMS OR LESS" | Description == "POSS: CANNABIS MORE THAN 30GMS") %>%
mutate(x = gsub("[()]", "", Location)) %>%
separate(x,into= c("Y","X"), sep=",") %>%
mutate(X = as.numeric(X),Y = as.numeric(Y)) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271') %>%
distinct()
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat.explore)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)   # for KDE and ML risk class intervals
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
policeDistricts <-
st_read("https://data.cityofchicago.org/api/geospatial/fthy-xz3r?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271') %>%
dplyr::select(District = dist_num)
drugArrest <-
read.socrata("https://data.cityofchicago.org/Public-Safety/Crimes-2017/d62x-nvdr") %>%
filter(Primary.Type == "NARCOTICS" & Description == "POSS: CANNABIS 30GMS OR LESS" | Description == "POSS: CANNABIS MORE THAN 30GMS") %>%
mutate(x = gsub("[()]", "", Location)) %>%
separate(x,into= c("Y","X"), sep=",") %>%
mutate(X = as.numeric(X),Y = as.numeric(Y)) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant")%>%
st_transform('ESRI:102271') %>%
distinct()
chicagoBoundary <-
st_read("https://data.cityofchicago.org/api/geospatial/ewy2-6yfk?method=export&format=GeoJSON") %>%
st_transform('ESRI:102271')
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = drugArrest, colour="blue", size=0.1, show.legend = "point") +
labs(title= "Narcotic Arrests, Chicago 2017") +
mapTheme(title_size = 14))
## using {sf} to create the grid
## Note the `.[chicagoBoundary] %>% ` line. This is needed to clip the grid to our data
fishnet <-
st_make_grid(chicagoBoundary,
cellsize = 500,
square = TRUE) %>%
.[chicagoBoundary] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
crime_net <-
dplyr::select(drugArrest) %>%
mutate(countNarco = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(countNarco = replace_na(countNarco, 0),
uniqueID = 1:n(),
cvID = sample(round(nrow(fishnet) / 24),
size=nrow(fishnet), replace = TRUE))
ggplot() +
geom_sf(data = crime_net, aes(fill = countNarco), color = NA) +
scale_fill_viridis() +
labs(title = "Count of Nacro Arrests for the fishnet") +
mapTheme()
## only pulling a single variable for our model to keep it simple
## using Socrata again
registeredMurals <-
read.socrata("https://data.cityofchicago.org/Historic-Preservation/Mural-Registry/we8h-apcf") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Registered_Murals") %>%
mutate(uniqueID = 1:n(),) %>%
filter(uniqueID != 439) %>%
filter(uniqueID != 440) %>%
filter(uniqueID != 441) %>%
filter(uniqueID != 442) %>%
filter(uniqueID != 443) %>%
group_by(Legend)
registeredMurals <- registeredMurals %>%
dplyr::select(geometry, Legend)
## Neighborhoods to use in LOOCV in a bit
neighborhoods <-
st_read("https://raw.githubusercontent.com/blackmad/neighborhoods/master/chicago.geojson") %>%
st_transform(st_crs(fishnet))
vars_net <- registeredMurals %>%
st_join(fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
left_join(fishnet, ., by = "uniqueID") %>%
spread(Legend, count, fill=0) %>%
dplyr::select(-`<NA>`) %>%
ungroup()
# convinience to reduce length of function names.
st_c    <- st_coordinates
st_coid <- st_centroid
## create NN from abandoned cars
vars_net <- vars_net %>%
mutate(Registered_Murals.nn = nn_function(st_c(st_coid(vars_net)),
st_c(registeredMurals),
k = 3))
## Visualize the NN feature
vars_net.long.nn <-
dplyr::select(vars_net, ends_with(".nn")) %>%
gather(Variable, value, -geometry)
## important to drop the geometry from joining features
final_net <-
left_join(crime_net, st_drop_geometry(vars_net), by="uniqueID")
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(neighborhoods, name), by = "uniqueID") %>%
st_join(dplyr::select(policeDistricts, District), by = "uniqueID") %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
# for live demo
# mapview::mapview(final_net, zcol = "District")
ggplot() +
geom_sf(data = vars_net.long.nn, aes(fill=value), colour=NA) +
scale_fill_viridis(name="NN Distance") +
labs(title="Murals NN Distance") +
mapTheme()
ggplot() +
geom_sf(data = vars_net, aes(fill=Registered_Murals), colour=NA) +
scale_fill_viridis() +
labs(title = "Count of Murals in Fishnet") +
mapTheme()
ggplot() +
geom_sf(data = final_net, aes(fill=countNarco), colour=NA) +
scale_fill_viridis() +
labs(title="Narcotic Arrests in Fishnet") +
mapTheme()
## generates warnings from PROJ issues
## {spdep} to make polygon to neighborhoods...
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## ... and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
# print(final_net.weights, zero.policy=TRUE)
## see ?localmoran
local_morans <- localmoran(final_net$Registered_Murals, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(Registered_Murals_Count = Registered_Murals,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
## This is just for plotting
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList, ncol = 4, top = "Local Morans I statistics, Narcotics"))
# generates warning from NN
final_net <- final_net %>%
mutate(Mural.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(Mural.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
Mural.isSig == 1))), k = 1))
## What does k = 1 represent?
final_net_nongeom <- final_net %>% st_drop_geometry()
final_net_nongeom %>%
dplyr::select(countNarco, Registered_Murals, Mural.isSig.dist) %>%
gather(Variable, Value, -countNarco) %>%
ggplot(aes(Value, countNarco)) +
geom_point(size = .5) + geom_smooth(method = "lm", colour = "#FA7800") +
facet_wrap(~Variable, nrow = 1, scales = "free") +
labs(title = "Correlation between Narcotic Arrests and Murals") +
plotTheme()
ggplot(final_net, aes(x=countNarco)) +
geom_histogram(color='white',fill="orange", bins=50)+
scale_x_continuous()+
scale_y_continuous()
## define the variables we want
reg.ss.vars <- c("Registered_Murals.nn", "Mural.isSig.dist")
## RUN REGRESSIONS
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "countNarco",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = name, countNarco, Prediction, geometry)
reg.ss.spatialCV <-
reg.ss.spatialCV %>%
mutate(
countNarco.Error = Prediction - countNarco,
countNarco.AbsError = abs(Prediction - countNarco),
countNarco.APE = (abs(Prediction - countNarco)) / countNarco)
ggplot(reg.ss.spatialCV)+
geom_sf(aes(fill = countNarco.Error))+
scale_fill_gradient(low = "black", high = "yellow", name = "Error of Predicted Narcotic Arrests")+
mapTheme()
ggplot(reg.ss.spatialCV)+
geom_sf(aes(fill = countNarco.AbsError))+
scale_fill_gradient(low = "black", high = "red", name = "Absolute Error of Predicted Narcotic Arrests")+
mapTheme()
ggplot(reg.ss.spatialCV)+
geom_sf(aes(fill = countNarco.APE))+
scale_fill_gradient(low = "black", high = "blue", name = "Absolute Percentage Error of Predicted Narcotic Arrests")+
mapTheme()
# Gray represents infinitely off
reg.ss.spatialCV_nogeom <- reg.ss.spatialCV %>%
st_drop_geometry() %>%
summarise(MAE = mean(countNarco.AbsError),
MAESTD = sd(countNarco.AbsError)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Error Standard Deviation')) %>%
kable_classic()
reg.ss.spatialCV_nogeom
narcs18 <-
read.socrata("https://data.cityofchicago.org/Public-Safety/Crimes-2018/3i3m-jwuy") %>%
filter(Primary.Type == "NARCOTICS") %>%
mutate(x = gsub("[()]", "", Location)) %>%
separate(x,into= c("Y","X"), sep=",") %>%
mutate(X = as.numeric(X),
Y = as.numeric(Y)) %>%
na.omit %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102271') %>%
distinct() %>%
.[fishnet,]
narc_ppp <- as.ppp(st_coordinates(drugArrest), W = st_bbox(final_net))
narc_KD.1000 <- spatstat.explore::density.ppp(narc_ppp, 1000)
narc_KD.1500 <- spatstat.explore::density.ppp(narc_ppp, 1500)
narc_KD.2000 <- spatstat.explore::density.ppp(narc_ppp, 2000)
narc_KD.df <- rbind(
mutate(data.frame(rasterToPoints(mask(raster(narc_KD.1000), as(neighborhoods, 'Spatial')))), Legend = "1000 Ft."),
mutate(data.frame(rasterToPoints(mask(raster(narc_KD.1500), as(neighborhoods, 'Spatial')))), Legend = "1500 Ft."),
mutate(data.frame(rasterToPoints(mask(raster(narc_KD.2000), as(neighborhoods, 'Spatial')))), Legend = "2000 Ft."))
narc_KD.df$Legend <- factor(narc_KD.df$Legend, levels = c("1000 Ft.", "1500 Ft.", "2000 Ft."))
narc_KDE_sum <- as.data.frame(narc_KD.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(narc_KDE_sum$value,
n = 5, "fisher")
narc_KDE_sf <- narc_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = classInt::findCols(kde_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(narcs18) %>% mutate(countNarco = 1), ., sum) %>%
mutate(countNarco = replace_na(countNarco, 0))) %>%
dplyr::select(label, Risk_Category, countNarco)
ml_breaks <- classIntervals(reg.ss.spatialCV$Prediction,
n = 5, "fisher")
narc_risk_sf <-
reg.ss.spatialCV %>%
mutate(label = "Risk Predictions",
Risk_Category =classInt::findCols(ml_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(narcs18) %>% mutate(countNarco = 1), ., sum) %>%
mutate(countNarco = replace_na(countNarco, 0))) %>%
dplyr::select(label,Risk_Category, countNarco)
rbind(narc_KDE_sf, narc_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(narcs18, 3000), size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 narcotic risk predictions; 2018 narcotic arrests") +
mapTheme(title_size = 14)
rbind(narc_KDE_sf, narc_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countNarco = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countNarco / sum(countNarco)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2018 narco",
y = "% of Test Set Narcotic Arrests (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
final_net_nongeom <- final_net %>% st_drop_geometry()
final_net_nongeom %>%
dplyr::select(countNarco, Registered_Murals, Registered_Murals.nn) %>%
gather(Variable, Value, -countNarco) %>%
ggplot(aes(Value, countNarco)) +
geom_point(size = .5) + geom_smooth(method = "lm", colour = "#FA7800") +
facet_wrap(~Variable, nrow = 1, scales = "free") +
labs(title = "Correlation between Narcotic Arrests and Murals") +
plotTheme()
final_net_nongeom <- final_net %>% st_drop_geometry()
final_net_nongeom %>%
dplyr::select(countNarco, Registered_Murals, cvID) %>%
gather(Variable, Value, -countNarco) %>%
ggplot(aes(Value, countNarco)) +
geom_point(size = .5) + geom_smooth(method = "lm", colour = "#FA7800") +
facet_wrap(~Variable, nrow = 1, scales = "free") +
labs(title = "Correlation between Narcotic Arrests and Murals") +
plotTheme()
final_net_nongeom <- final_net %>% st_drop_geometry()
final_net_nongeom %>%
dplyr::select(countNarco, Registered_Murals) %>%
gather(Variable, Value, -countNarco) %>%
ggplot(aes(Value, countNarco)) +
geom_point(size = .5) + geom_smooth(method = "lm", colour = "#FA7800") +
facet_wrap(~Variable, nrow = 1, scales = "free") +
labs(title = "Correlation between Narcotic Arrests and Murals") +
plotTheme()
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = drugArrest, colour="blue", size=0.1, show.legend = "point") +
labs(title= "Narcotic Arrests, Chicago 2017") +
mapTheme(title_size = 14))
